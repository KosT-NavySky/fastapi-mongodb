{"config":{"indexing":"full","lang":["ru","en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"FastAPI MongoDB documentation \u2693 Description \u2693 A library that simplifies work and integration with MongoDB for a FastAPI project. Danger The project is under development, so there is a possibility of breaking changes. Info When the key points in development are completed, I will take care of the documentation. Installation \u2693 Basic installation \u2693 1 pip install fastapi-mongodb Full installation \u2693 1 pip install fastapi-mongodb [ orjson ] Dependencies Python 3.9+ fastapi motor pymongo pydantic orjson (optional, need for BaseConfiguration and Pydantic's Config options: * json_dumps , json_loads*) pyjwt","title":"Main"},{"location":"#fastapimongodb-documentation","text":"","title":"FastAPIMongoDB documentation"},{"location":"#description","text":"A library that simplifies work and integration with MongoDB for a FastAPI project. Danger The project is under development, so there is a possibility of breaking changes. Info When the key points in development are completed, I will take care of the documentation.","title":"Description"},{"location":"#installation","text":"","title":"Installation"},{"location":"#basic-installation","text":"1 pip install fastapi-mongodb","title":"Basic installation"},{"location":"#full-installation","text":"1 pip install fastapi-mongodb [ orjson ] Dependencies Python 3.9+ fastapi motor pymongo pydantic orjson (optional, need for BaseConfiguration and Pydantic's Config options: * json_dumps , json_loads*) pyjwt","title":"Full installation"},{"location":"managers/","text":"PasswordsManager \u2693 1 2 3 4 5 6 7 8 9 10 11 12 13 14 import fastapi_mongodb passwords_manager = fastapi_mongodb . PasswordsManager ( algorithm = fastapi_mongodb . PASSWORD_ALGORITHMS . SHA512 , iterations = 524288 ) raw_password = \"SUPER SECURE PASSWORD!\" password_hash = passwords_manager . make_password ( password = raw_password ) if passwords_manager . check_password ( password = raw_password , password_hash = password_hash ): print ( \"\"\"ALLOW ACCESS!\"\"\" ) else : print ( \"\"\"ACCESS DENIED!\"\"\" ) PASSWORD_ALGORITHMS \u2693 1 2 3 4 class PASSWORD_ALGORITHMS ( str , enum . Enum ): SHA256 = \"sha256\" SHA384 = \"sha384\" SHA512 = \"sha512\" TokensManager \u2693 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 import datetime import fastapi_mongodb SECRET_KEY = \"SUPER SECURE TOKEN FROM ENVIRONMENT VARIABLES!!!\" tokens_manager = fastapi_mongodb . TokensManager ( secret_key = SECRET_KEY , algorithm = fastapi_mongodb . TOKEN_ALGORITHMS . HS256 , default_token_lifetime = datetime . timedelta ( minutes = 30 ), ) token_data = { \"anyKey\" : \"Not Secure\" , \"anotherKey\" : \"All data available to Front-end and JWT clients!!!\" , } jwt_token = tokens_manager . create_code ( data = token_data , aud = \"test_audience\" , iss = \"test_issuer\" ) parsed_token = tokens_manager . read_code ( code = jwt_token , aud = \"test_audience\" , iss = \"test_issuer\" ) TOKENS_ALGORITHMS \u2693 1 2 3 4 class TOKEN_ALGORITHMS ( str , enum . Enum ): HS256 = \"HS256\" HS384 = \"HS384\" HS512 = \"HS512\"","title":"Managers"},{"location":"managers/#passwordsmanager","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 import fastapi_mongodb passwords_manager = fastapi_mongodb . PasswordsManager ( algorithm = fastapi_mongodb . PASSWORD_ALGORITHMS . SHA512 , iterations = 524288 ) raw_password = \"SUPER SECURE PASSWORD!\" password_hash = passwords_manager . make_password ( password = raw_password ) if passwords_manager . check_password ( password = raw_password , password_hash = password_hash ): print ( \"\"\"ALLOW ACCESS!\"\"\" ) else : print ( \"\"\"ACCESS DENIED!\"\"\" )","title":"PasswordsManager"},{"location":"managers/#password_algorithms","text":"1 2 3 4 class PASSWORD_ALGORITHMS ( str , enum . Enum ): SHA256 = \"sha256\" SHA384 = \"sha384\" SHA512 = \"sha512\"","title":"PASSWORD_ALGORITHMS"},{"location":"managers/#tokensmanager","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 import datetime import fastapi_mongodb SECRET_KEY = \"SUPER SECURE TOKEN FROM ENVIRONMENT VARIABLES!!!\" tokens_manager = fastapi_mongodb . TokensManager ( secret_key = SECRET_KEY , algorithm = fastapi_mongodb . TOKEN_ALGORITHMS . HS256 , default_token_lifetime = datetime . timedelta ( minutes = 30 ), ) token_data = { \"anyKey\" : \"Not Secure\" , \"anotherKey\" : \"All data available to Front-end and JWT clients!!!\" , } jwt_token = tokens_manager . create_code ( data = token_data , aud = \"test_audience\" , iss = \"test_issuer\" ) parsed_token = tokens_manager . read_code ( code = jwt_token , aud = \"test_audience\" , iss = \"test_issuer\" )","title":"TokensManager"},{"location":"managers/#tokens_algorithms","text":"1 2 3 4 class TOKEN_ALGORITHMS ( str , enum . Enum ): HS256 = \"HS256\" HS384 = \"HS384\" HS512 = \"HS512\"","title":"TOKENS_ALGORITHMS"},{"location":"setup/","text":"Setup \u2693 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import fastapi import fastapi_mongodb db_manager = fastapi_mongodb . BaseDBManager ( db_url = \"mongodb://0.0.0.0:27017/\" , default_db_name = \"test_db\" ) app = fastapi . FastAPI ( on_startup = [ db_manager . create_client ], on_shutdown = [ db_manager . delete_client ], ) app . state . db_manager = db_manager app . state . users_repository = fastapi_mongodb . BaseRepository ( db_manager = db_manager , db_name = \"test_db\" , col_name = \"users\" )","title":"Setup"},{"location":"setup/#setup","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import fastapi import fastapi_mongodb db_manager = fastapi_mongodb . BaseDBManager ( db_url = \"mongodb://0.0.0.0:27017/\" , default_db_name = \"test_db\" ) app = fastapi . FastAPI ( on_startup = [ db_manager . create_client ], on_shutdown = [ db_manager . delete_client ], ) app . state . db_manager = db_manager app . state . users_repository = fastapi_mongodb . BaseRepository ( db_manager = db_manager , db_name = \"test_db\" , col_name = \"users\" )","title":"Setup"},{"location":"common/badges/","text":"","title":"Badges"},{"location":"common/dependencies/","text":"Python 3.9+ fastapi motor pymongo pydantic orjson (optional, need for BaseConfiguration and Pydantic's Config options: * json_dumps , json_loads*) pyjwt","title":"Dependencies"},{"location":"common/install001/","text":"1 pip install fastapi-mongodb","title":"Install001"},{"location":"common/install002/","text":"1 pip install fastapi-mongodb [ orjson ]","title":"Install002"},{"location":"ru/./","text":"FastAPI MongoDB \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u2693 \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u2693 \u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0443\u043f\u0440\u043e\u0449\u0430\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0443 \u0438 \u0438\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044e \u0441 MongoDB \u0434\u043b\u044f \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u043d\u0430 FastAPI. Danger \u041f\u0440\u043e\u0435\u043a\u0442 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0439 \u0441\u0442\u0430\u0434\u0438\u0438 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b \u043a\u0440\u0438\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f. Info \u041a\u043e\u0433\u0434\u0430 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043c\u043e\u043c\u0435\u043d\u0442\u044b \u0432 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0431\u0443\u0434\u0443\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u044b, \u044f \u0437\u0430\u0439\u043c\u0443\u0441\u044c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0435\u0439. \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u2693 \u0411\u0430\u0437\u043e\u0432\u0430\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u2693 1 pip install fastapi-mongodb \u041f\u043e\u043b\u043d\u0430\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u2693 1 pip install fastapi-mongodb [ orjson ] \u0417\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 Python 3.9+ fastapi motor pymongo pydantic orjson (\u043d\u0435 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u043a \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0435, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f BaseConfiguration \u0438 Pydantic Config \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432: json_dumps , json_loads ) pyjwt","title":"\u0413\u043b\u0430\u0432\u043d\u0430\u044f"},{"location":"ru/./#fastapimongodb","text":"","title":"FastAPIMongoDB \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f"},{"location":"ru/./#_1","text":"\u0411\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0443\u043f\u0440\u043e\u0449\u0430\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0443 \u0438 \u0438\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044e \u0441 MongoDB \u0434\u043b\u044f \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u043d\u0430 FastAPI. Danger \u041f\u0440\u043e\u0435\u043a\u0442 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0439 \u0441\u0442\u0430\u0434\u0438\u0438 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b \u043a\u0440\u0438\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f. Info \u041a\u043e\u0433\u0434\u0430 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043c\u043e\u043c\u0435\u043d\u0442\u044b \u0432 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u0431\u0443\u0434\u0443\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u044b, \u044f \u0437\u0430\u0439\u043c\u0443\u0441\u044c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0435\u0439.","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435"},{"location":"ru/./#_2","text":"","title":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430"},{"location":"ru/./#_3","text":"1 pip install fastapi-mongodb","title":"\u0411\u0430\u0437\u043e\u0432\u0430\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430"},{"location":"ru/./#_4","text":"1 pip install fastapi-mongodb [ orjson ] \u0417\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 Python 3.9+ fastapi motor pymongo pydantic orjson (\u043d\u0435 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u043a \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0435, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f BaseConfiguration \u0438 Pydantic Config \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432: json_dumps , json_loads ) pyjwt","title":"\u041f\u043e\u043b\u043d\u0430\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430"},{"location":"ru/managers/","text":"PasswordsManager \u2693 1 2 3 4 5 6 7 8 9 10 11 12 13 14 import fastapi_mongodb passwords_manager = fastapi_mongodb . PasswordsManager ( algorithm = fastapi_mongodb . PASSWORD_ALGORITHMS . SHA512 , iterations = 524288 ) raw_password = \"SUPER SECURE PASSWORD!\" password_hash = passwords_manager . make_password ( password = raw_password ) if passwords_manager . check_password ( password = raw_password , password_hash = password_hash ): print ( \"\"\"ALLOW ACCESS!\"\"\" ) else : print ( \"\"\"ACCESS DENIED!\"\"\" ) PASSWORD_ALGORITHMS \u2693 1 2 3 4 class PASSWORD_ALGORITHMS ( str , enum . Enum ): SHA256 = \"sha256\" SHA384 = \"sha384\" SHA512 = \"sha512\" TokensManager \u2693 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 import datetime import fastapi_mongodb SECRET_KEY = \"SUPER SECURE TOKEN FROM ENVIRONMENT VARIABLES!!!\" tokens_manager = fastapi_mongodb . TokensManager ( secret_key = SECRET_KEY , algorithm = fastapi_mongodb . TOKEN_ALGORITHMS . HS256 , default_token_lifetime = datetime . timedelta ( minutes = 30 ), ) token_data = { \"anyKey\" : \"Not Secure\" , \"anotherKey\" : \"All data available to Front-end and JWT clients!!!\" , } jwt_token = tokens_manager . create_code ( data = token_data , aud = \"test_audience\" , iss = \"test_issuer\" ) parsed_token = tokens_manager . read_code ( code = jwt_token , aud = \"test_audience\" , iss = \"test_issuer\" ) TOKENS_ALGORITHMS \u2693 1 2 3 4 class TOKEN_ALGORITHMS ( str , enum . Enum ): HS256 = \"HS256\" HS384 = \"HS384\" HS512 = \"HS512\"","title":"\u041c\u0435\u043d\u0435\u0434\u0436\u0435\u0440\u044b"},{"location":"ru/managers/#passwordsmanager","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 import fastapi_mongodb passwords_manager = fastapi_mongodb . PasswordsManager ( algorithm = fastapi_mongodb . PASSWORD_ALGORITHMS . SHA512 , iterations = 524288 ) raw_password = \"SUPER SECURE PASSWORD!\" password_hash = passwords_manager . make_password ( password = raw_password ) if passwords_manager . check_password ( password = raw_password , password_hash = password_hash ): print ( \"\"\"ALLOW ACCESS!\"\"\" ) else : print ( \"\"\"ACCESS DENIED!\"\"\" )","title":"PasswordsManager"},{"location":"ru/managers/#password_algorithms","text":"1 2 3 4 class PASSWORD_ALGORITHMS ( str , enum . Enum ): SHA256 = \"sha256\" SHA384 = \"sha384\" SHA512 = \"sha512\"","title":"PASSWORD_ALGORITHMS"},{"location":"ru/managers/#tokensmanager","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 import datetime import fastapi_mongodb SECRET_KEY = \"SUPER SECURE TOKEN FROM ENVIRONMENT VARIABLES!!!\" tokens_manager = fastapi_mongodb . TokensManager ( secret_key = SECRET_KEY , algorithm = fastapi_mongodb . TOKEN_ALGORITHMS . HS256 , default_token_lifetime = datetime . timedelta ( minutes = 30 ), ) token_data = { \"anyKey\" : \"Not Secure\" , \"anotherKey\" : \"All data available to Front-end and JWT clients!!!\" , } jwt_token = tokens_manager . create_code ( data = token_data , aud = \"test_audience\" , iss = \"test_issuer\" ) parsed_token = tokens_manager . read_code ( code = jwt_token , aud = \"test_audience\" , iss = \"test_issuer\" )","title":"TokensManager"},{"location":"ru/managers/#tokens_algorithms","text":"1 2 3 4 class TOKEN_ALGORITHMS ( str , enum . Enum ): HS256 = \"HS256\" HS384 = \"HS384\" HS512 = \"HS512\"","title":"TOKENS_ALGORITHMS"},{"location":"ru/setup/","text":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u2693 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import fastapi import fastapi_mongodb db_manager = fastapi_mongodb . BaseDBManager ( db_url = \"mongodb://0.0.0.0:27017/\" , default_db_name = \"test_db\" ) app = fastapi . FastAPI ( on_startup = [ db_manager . create_client ], on_shutdown = [ db_manager . delete_client ], ) app . state . db_manager = db_manager app . state . users_repository = fastapi_mongodb . BaseRepository ( db_manager = db_manager , db_name = \"test_db\" , col_name = \"users\" )","title":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430"},{"location":"ru/setup/#_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import fastapi import fastapi_mongodb db_manager = fastapi_mongodb . BaseDBManager ( db_url = \"mongodb://0.0.0.0:27017/\" , default_db_name = \"test_db\" ) app = fastapi . FastAPI ( on_startup = [ db_manager . create_client ], on_shutdown = [ db_manager . delete_client ], ) app . state . db_manager = db_manager app . state . users_repository = fastapi_mongodb . BaseRepository ( db_manager = db_manager , db_name = \"test_db\" , col_name = \"users\" )","title":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430"},{"location":"ru/common/badges/","text":"","title":"Badges"},{"location":"ru/common/dependencies/","text":"Python 3.9+ fastapi motor pymongo pydantic orjson (\u043d\u0435 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u043a \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0435, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f BaseConfiguration \u0438 Pydantic Config \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432: json_dumps , json_loads ) pyjwt","title":"Dependencies"},{"location":"ru/common/install001/","text":"1 pip install fastapi-mongodb","title":"Install001"},{"location":"ru/common/install002/","text":"1 pip install fastapi-mongodb [ orjson ]","title":"Install002"}]}